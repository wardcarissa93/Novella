@model Novella.Models.PayPalConfirmationModel

@{
    ViewData["Title"] = "Checkout";
}

<h2>Checkout</h2>

<div class="checkout-form">
    <div class="cart-step">
        <div class="number-circle"><p class="number">1</p></div><h4>Shipping Address</h4>
    </div>
    <!-- Shipping Address Form Group -->
    <div class="form-group">
        <label>Address Line 1:</label>
        <input type="text" class="form-control" placeholder="Enter address line 1" name="ShippingAddressLineOne" required/>
    </div>
    <div class="form-group">
        <label>Address Line 2:</label>
        <input type="text" class="form-control" placeholder="Enter address line 2" name="ShippingAddressLineTwo" />
    </div>
    <div class="form-group">
        <label>City:</label>
        <input type="text" class="form-control" placeholder="Enter city" name="ShippingCity" required />
    </div>
    <div class="form-group">
        <label>Province:</label>
        <input type="text" class="form-control" placeholder="Enter province" name="ShippingProvince" required />
    </div>
    <div class="form-group">
        <label>Postal Code:</label>
        <input type="text" class="form-control" placeholder="Enter postal code" name="ShippingPostalCode" required />
    </div>

    <div class="cart-step">
        <div class="number-circle"><p class="number">2</p></div><h4>Billing Address</h4>
    </div>
    <!-- Billing Address Form Group -->
    <div class="form-group">
        <label>Address Line 1:</label>
        <input type="text" class="form-control" placeholder="Enter address line 1" name="BillingAddressLineOne" required />
    </div>
    <div class="form-group">
        <label>Address Line 2:</label>
        <input type="text" class="form-control" placeholder="Enter address line 2" name="BillingAddressLineTwo" />
    </div>
    <div class="form-group">
        <label>City:</label>
        <input type="text" class="form-control" placeholder="Enter city" name="BillingCity" required />
    </div>
    <div class="form-group">
        <label>Province:</label>
        <input type="text" class="form-control" placeholder="Enter province" name="BillingProvince" required />
    </div>
    <div class="form-group">
        <label>Postal Code:</label>
        <input type="text" class="form-control" placeholder="Enter postal code" name="BillingPostalCode" required />
    </div>

    <h3>Total Price: $@Model.TotalPrice</h3>

    <!-- PayPal button code -->
    <div id="paypal-button-container"></div>
</div>

@section Scripts {
    <script src="https://www.paypal.com/sdk/js?client-id=@ViewBag.PayPalClientID&currency=USD"></script>
    <script>
        paypal.Buttons({
            createOrder: function (data, actions) {
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: '@Model.TotalPrice'
                        }
                    }]
                });
            },
            onApprove: function (data, actions) {
                return actions.order.capture().then(function (details) {
                    // access ViewBag.Cart and serialize it for sending
                    var cartItems = @Html.Raw(Json.Serialize(ViewBag.Cart));
                    // Create shipping address object
                    var shippingAddress = {
                        AddressLine1: $('input[name="ShippingAddressLineOne"]').val(),
                        AddressLine2: $('input[name="ShippingAddressLineTwo"]').val(),
                        City: $('input[name="ShippingCity"]').val(),
                        Province: $('input[name="ShippingProvince"]').val(),
                        PostalCode: $('input[name="ShippingPostalCode"]').val()
                    };

                    // Create billing address object
                    var billingAddress = {
                        AddressLine1: $('input[name="BillingAddressLineOne"]').val(),
                        AddressLine2: $('input[name="BillingAddressLineTwo"]').val(),
                        City: $('input[name="BillingCity"]').val(),
                        Province: $('input[name="BillingProvince"]').val(),
                        PostalCode: $('input[name="BillingPostalCode"]').val()
                    };
                    // Bundle the PayPal transaction ID and cart items together
                    var orderData = {
                        paypalTransactionId: details.id,
                        cartItems: cartItems,  
                        shippingAddress: shippingAddress,
                        billingAddress: billingAddress,
                    };

                    // AJAX call to server to save the order
                    $.ajax({
                        url: '/Order/SaveOrder',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(orderData),
                        success: function (response) {
                            // Assuming the response includes a 'success' flag and 'redirectUrl'
                            if (response.success) {
                                console.log("Success:", response);
                                localStorage.setItem('ajaxSuccessResponse', JSON.stringify(response));

                                // Redirect to the confirmation page using the URL provided by the server
                                window.location.href = response.redirectUrl;
                            } else {
                                // Optionally handle the case where the operation didn't succeed
                                // This might include displaying a message to the user
                                console.error("Operation was not successful:", response.message);
                                localStorage.setItem('ajaxOperationFailed', JSON.stringify(response));
                                alert("We encountered a problem processing your request. Please try again later.");
                            }
                        },
                        error: function (error) {
                            // Handle error
                            console.error("Error:", error);
                            // store the error in localStorage or another storage mechanism
                            localStorage.setItem('ajaxErrorResponse', JSON.stringify(error));
                            alert("We encountered a problem processing your request. Please try again later.");
                        }
                    });
                });
            }
        }).render('#paypal-button-container');
    </script>
}
